
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import au.com.bytecode.opencsv.CSVWriter;
import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.awt.Font;
import javax.swing.JTextField;
import java.io.FileWriter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author [Shreesu Thapa, Avigya Aryal, Mubson Karki] - C13
 */

//This class is created for adding staff in the airlines.
public class AddStaff extends javax.swing.JFrame {

    public AddStaff() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        blackPanel = new javax.swing.JPanel();
        airlinesISHeadingLabel = new javax.swing.JLabel();
        addStaffContentPanel = new javax.swing.JPanel();
        rePasswordLabel = new javax.swing.JLabel();
        userNameLabel = new javax.swing.JLabel();
        userNameField = new javax.swing.JTextField();
        passwordField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        contentHeadingLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        rePasswordField = new javax.swing.JTextField();
        pictureLabel = new javax.swing.JLabel();
        addFlightNavigationLabel = new javax.swing.JLabel();
        addStaffNavigationLabel = new javax.swing.JLabel();
        logOutNavigationLabel = new javax.swing.JLabel();
        editFlightNavigationLabel = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        newFileMenuitem = new javax.swing.JMenuItem();
        existingFileMenuitem = new javax.swing.JMenuItem();
        exitMenuitem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        aboutMenuitem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        blackPanel.setBackground(new java.awt.Color(0, 0, 0));
        blackPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        airlinesISHeadingLabel.setFont(new java.awt.Font("Times New Roman", 1, 35)); // NOI18N
        airlinesISHeadingLabel.setForeground(new java.awt.Color(255, 215, 0));
        airlinesISHeadingLabel.setText("Airlines Information System");
        airlinesISHeadingLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                airlinesISHeadingLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                airlinesISHeadingLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                airlinesISHeadingLabelMouseExited(evt);
            }
        });
        blackPanel.add(airlinesISHeadingLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        addStaffContentPanel.setBackground(new java.awt.Color(204, 255, 204));
        addStaffContentPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 0), 6, true));
        addStaffContentPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rePasswordLabel.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        rePasswordLabel.setText("Re-Password");
        addStaffContentPanel.add(rePasswordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, -1, -1));

        userNameLabel.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        userNameLabel.setText("User Name");
        addStaffContentPanel.add(userNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));

        userNameField.setToolTipText("");
        userNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameFieldActionPerformed(evt);
            }
        });
        addStaffContentPanel.add(userNameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 80, 180, 40));

        passwordField.setToolTipText("");
        addStaffContentPanel.add(passwordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 150, 180, 40));

        addButton.setBackground(new java.awt.Color(204, 255, 204));
        addButton.setFont(new java.awt.Font("Arial Black", 1, 30)); // NOI18N
        addButton.setText("Add");
        addButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 255, 51), 4, true));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        addStaffContentPanel.add(addButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 300, 110, 50));

        contentHeadingLabel.setFont(new java.awt.Font("Arial", 3, 48)); // NOI18N
        contentHeadingLabel.setText("<html> <u>Add Staff</u> </html>");
        addStaffContentPanel.add(contentHeadingLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 230, -1));

        passwordLabel.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        passwordLabel.setText("Password");
        addStaffContentPanel.add(passwordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, -1));

        rePasswordField.setToolTipText("");
        addStaffContentPanel.add(rePasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 220, 180, 40));

        blackPanel.add(addStaffContentPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 160, 470, 400));

        pictureLabel.setBackground(new java.awt.Color(255, 255, 255));
        pictureLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/baHpXzf-high-resolution-aircraft-wallpapers.jpg"))); // NOI18N
        pictureLabel.setOpaque(true);
        blackPanel.add(pictureLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 1100, 550));

        addFlightNavigationLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        addFlightNavigationLabel.setForeground(new java.awt.Color(255, 255, 255));
        addFlightNavigationLabel.setText("<html> <u> Add Flight </u> <html>");
        addFlightNavigationLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addFlightNavigationLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addFlightNavigationLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addFlightNavigationLabelMouseExited(evt);
            }
        });
        blackPanel.add(addFlightNavigationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 50, -1, -1));

        addStaffNavigationLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        addStaffNavigationLabel.setForeground(new java.awt.Color(255, 255, 255));
        addStaffNavigationLabel.setText("<html> <u> Add Staff </u> <html>");
        addStaffNavigationLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addStaffNavigationLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addStaffNavigationLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addStaffNavigationLabelMouseExited(evt);
            }
        });
        blackPanel.add(addStaffNavigationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 50, -1, -1));

        logOutNavigationLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        logOutNavigationLabel.setForeground(new java.awt.Color(255, 255, 255));
        logOutNavigationLabel.setText("<html> <u> LogOut </u> <html>");
        logOutNavigationLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logOutNavigationLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logOutNavigationLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logOutNavigationLabelMouseExited(evt);
            }
        });
        blackPanel.add(logOutNavigationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 50, -1, -1));

        editFlightNavigationLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        editFlightNavigationLabel.setForeground(new java.awt.Color(255, 255, 255));
        editFlightNavigationLabel.setText("<html>\n<u>\nEdit Flight\n</u>\n<html>");
        editFlightNavigationLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editFlightNavigationLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                editFlightNavigationLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                editFlightNavigationLabelMouseExited(evt);
            }
        });
        blackPanel.add(editFlightNavigationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 50, -1, -1));

        getContentPane().add(blackPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 700));

        fileMenu.setText("File");
        fileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileMenuActionPerformed(evt);
            }
        });

        newFileMenuitem.setText("Open New File");
        newFileMenuitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFileMenuitemActionPerformed(evt);
            }
        });
        fileMenu.add(newFileMenuitem);

        existingFileMenuitem.setText("Open Saved File");
        existingFileMenuitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                existingFileMenuitemActionPerformed(evt);
            }
        });
        fileMenu.add(existingFileMenuitem);

        exitMenuitem.setText("Exit");
        exitMenuitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuitemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuitem);

        menuBar.add(fileMenu);

        helpMenu.setText("Help");

        aboutMenuitem.setText("About");
        aboutMenuitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuitemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuitem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void airlinesISHeadingLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_airlinesISHeadingLabelMouseClicked
        int option = JOptionPane.showConfirmDialog(null, "Are you sure? You will be taken to homepage.", "WARNING!", JOptionPane.YES_NO_OPTION);
       
        if(option == JOptionPane.YES_OPTION){
            try {
                dispose();
                HomePage var = new HomePage();
                var.setVisible(true);
            }
            catch (IOException ex) {
                Logger.getLogger(HomePage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_airlinesISHeadingLabelMouseClicked

    private void airlinesISHeadingLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_airlinesISHeadingLabelMouseEntered
        airlinesISHeadingLabel.setFont(new Font("Times New Roman", Font.BOLD, 38));
    }//GEN-LAST:event_airlinesISHeadingLabelMouseEntered

    private void airlinesISHeadingLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_airlinesISHeadingLabelMouseExited
        airlinesISHeadingLabel.setFont(new Font("Times New Roman", Font.BOLD, 35));
    }//GEN-LAST:event_airlinesISHeadingLabelMouseExited

    //This method adds the staff login details. And the details can only be added by admin
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        try {
            String name = userNameField.getText();
            String password = passwordField.getText();
            String rePassword = rePasswordField.getText();
            
            //If condition for confirming the password of staff.
            if(password.equals(rePassword))
            {
                //Asking admin for their username and password to verify adding staff
                JTextField adminName = new JTextField();
                JTextField adminPassword = new JTextField();
                Object[] verification = {"Admin Name:", adminName, "Password:", adminPassword};
                
                int dialogBox = JOptionPane.showConfirmDialog(null, verification, "Confirm Admin", JOptionPane.OK_CANCEL_OPTION);
                
                if(dialogBox == JOptionPane.OK_OPTION)
                {
                    //If admin verification is correct, the staff login details are added to the csv file.
                    if(adminName.getText().equals("admin") && adminPassword.getText().equals("admin"))
                    {
                        String file = ".\\staffInfo.csv";
                        CSVWriter writer = new CSVWriter(new FileWriter(file,true));

                        ArrayList<String[]> record = new ArrayList<String[]>();
                        record.add(new String[] {name, password});
                        writer.writeAll(record);

                        writer.close();
                    }
                }
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Please give same passwords.");
                userNameField.setText("");
                passwordField.setText("");
                rePasswordField.setText("");
            }
            
        }
        catch (IOException ex) {
            Logger.getLogger(AddingFlight.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_addButtonActionPerformed

    private void addFlightNavigationLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addFlightNavigationLabelMouseClicked
        dispose();
        AddingFlight var = new AddingFlight();
        var.setVisible(true);
    }//GEN-LAST:event_addFlightNavigationLabelMouseClicked

    private void addFlightNavigationLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addFlightNavigationLabelMouseEntered
        addFlightNavigationLabel.setFont(new Font("Times New Roman", Font.BOLD, 20));
    }//GEN-LAST:event_addFlightNavigationLabelMouseEntered

    private void addFlightNavigationLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addFlightNavigationLabelMouseExited
        addFlightNavigationLabel.setFont(new Font("Times New Roman", Font.BOLD, 18));
    }//GEN-LAST:event_addFlightNavigationLabelMouseExited

    private void addStaffNavigationLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addStaffNavigationLabelMouseClicked

        dispose();
        AddStaff var = new AddStaff();
        var.setVisible(true);

    }//GEN-LAST:event_addStaffNavigationLabelMouseClicked

    private void addStaffNavigationLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addStaffNavigationLabelMouseEntered
        addStaffNavigationLabel.setFont(new Font("Times New Roman", Font.BOLD, 20));
    }//GEN-LAST:event_addStaffNavigationLabelMouseEntered

    private void addStaffNavigationLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addStaffNavigationLabelMouseExited
        addStaffNavigationLabel.setFont(new Font("Times New Roman", Font.BOLD, 18));
    }//GEN-LAST:event_addStaffNavigationLabelMouseExited

    private void logOutNavigationLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutNavigationLabelMouseClicked
        int option = JOptionPane.showConfirmDialog(null, "Do you want to LogOut?", "You Will Be Taken To HomePage", JOptionPane.YES_NO_OPTION);
       
        if(option == JOptionPane.YES_OPTION)
        {
            try {
                dispose();
                HomePage var = new HomePage();
                var.setVisible(true);
            } catch (IOException ex) {
                Logger.getLogger(AddStaff.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_logOutNavigationLabelMouseClicked

    private void logOutNavigationLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutNavigationLabelMouseEntered
        logOutNavigationLabel.setFont(new Font("Times New Roman", Font.BOLD, 20));
    }//GEN-LAST:event_logOutNavigationLabelMouseEntered

    private void logOutNavigationLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutNavigationLabelMouseExited
        logOutNavigationLabel.setFont(new Font("Times New Roman", Font.BOLD, 18));
    }//GEN-LAST:event_logOutNavigationLabelMouseExited

    private void editFlightNavigationLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editFlightNavigationLabelMouseClicked
        dispose();
        EditFlight var = new EditFlight();
        var.setVisible(true);
    }//GEN-LAST:event_editFlightNavigationLabelMouseClicked

    private void editFlightNavigationLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editFlightNavigationLabelMouseEntered
        editFlightNavigationLabel.setFont(new Font("Times New Roman", Font.BOLD, 20));
    }//GEN-LAST:event_editFlightNavigationLabelMouseEntered

    private void editFlightNavigationLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editFlightNavigationLabelMouseExited
        editFlightNavigationLabel.setFont(new Font("Times New Roman", Font.BOLD, 18));
    }//GEN-LAST:event_editFlightNavigationLabelMouseExited

    private void newFileMenuitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFileMenuitemActionPerformed
        try {
            HomePage var = new HomePage();
            var.setVisible(true);
            var.setDefaultCloseOperation(this.DISPOSE_ON_CLOSE);
        } catch (IOException ex) {
            Logger.getLogger(Search.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_newFileMenuitemActionPerformed

    private void existingFileMenuitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_existingFileMenuitemActionPerformed
        try {
            EditFlight var = new EditFlight();
            var.setVisible(true);
            
            BufferedReader file = new BufferedReader(new FileReader(new File(".\\dataWhileOpenExistingFile.csv")));
            ArrayList<String[]> records = new ArrayList<String[]>();
            
            String line = null;
            int row = 0;
            
            while ((line = file.readLine()) != null) {
                
                if (row == 0) {
                    row++;
                    continue;
                }
                String[] splitted = line.split(",");
                records.add(splitted);
            }
            file.close();

            for(String[] data: records)
            {
                var.tab.addRow(new Object[]{});
                int col = 0;
                for(String subData: data)
                {
                    var.editFlightTable.setValueAt(subData, var.tab.getRowCount()-1, col);
                    col++;
                }
            }
        } 
        catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_existingFileMenuitemActionPerformed

    private void exitMenuitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuitemActionPerformed
        int option = JOptionPane.showConfirmDialog(null, "Are you sure you want to exit?", "Confirm", JOptionPane.YES_NO_OPTION);
        
        if (option == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_exitMenuitemActionPerformed

    private void fileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuActionPerformed

    }//GEN-LAST:event_fileMenuActionPerformed

    private void aboutMenuitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuitemActionPerformed
        try{
            URI link = new URI("https://drive.google.com/file/d/1SiBFresB3Ftddgo9-YTJS3opDCFjYjU5/view?usp=sharing");
            Desktop var = Desktop.getDesktop();
            var.browse(link);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Sorry for trouble! We are having an issue. Please check back later");
        }
    }//GEN-LAST:event_aboutMenuitemActionPerformed

    private void userNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddStaff.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddStaff().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuitem;
    private javax.swing.JButton addButton;
    private javax.swing.JLabel addFlightNavigationLabel;
    private javax.swing.JPanel addStaffContentPanel;
    private javax.swing.JLabel addStaffNavigationLabel;
    private javax.swing.JLabel airlinesISHeadingLabel;
    private javax.swing.JPanel blackPanel;
    private javax.swing.JLabel contentHeadingLabel;
    private javax.swing.JLabel editFlightNavigationLabel;
    private javax.swing.JMenuItem existingFileMenuitem;
    private javax.swing.JMenuItem exitMenuitem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JLabel logOutNavigationLabel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem newFileMenuitem;
    private javax.swing.JTextField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel pictureLabel;
    private javax.swing.JTextField rePasswordField;
    private javax.swing.JLabel rePasswordLabel;
    private javax.swing.JTextField userNameField;
    private javax.swing.JLabel userNameLabel;
    // End of variables declaration//GEN-END:variables
}
