
import au.com.bytecode.opencsv.CSVWriter;
import java.awt.Desktop;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.net.URI;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author [Shreesu Thapa, Avigya Aryal, Mubson Karki] - C13
 */


//This class is responsible for handling feature regarding adding of flight details
public class AddingFlight extends javax.swing.JFrame {
    String codeVariable;
    String nameVariable;
    String fromCityVariable;
    String toCityVariable;
    String dateVariable;
    String timeVariable;
    String capacityVariable;
    String classVariable;
    String priceVariable;
    String descriptionVariable;
    
    //Creating an instance of String list to store the data in JComboBox.
    String[] cities = {"Atlanta","Bangkok","Beijing","Chicago","Dallas","Denver","Dubai","Istabnul","Kathmandu","Kolkata",
                        "London","Los Angeles","Moscow","Madrid","New York","Osaka","Paris","Seoul","Shanghai","Tokyo"};

    
    public AddingFlight() {
        initComponents();
        //setting actioncommand for radiobuttons
        radioA.setActionCommand("A");
        radioB.setActionCommand("B");
        radioC.setActionCommand("C");
        radioD.setActionCommand("D");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        flightClass_ButtonGroup = new javax.swing.ButtonGroup();
        blackPanel = new javax.swing.JPanel();
        airlinesISHeadingLabel = new javax.swing.JLabel();
        addFlightNavigationLabel = new javax.swing.JLabel();
        addStaffNavigationLabel = new javax.swing.JLabel();
        logOutNavigationLabel = new javax.swing.JLabel();
        addFlightContentPanel = new javax.swing.JPanel();
        flightName = new javax.swing.JTextField();
        flightNameLabel = new javax.swing.JLabel();
        fromCityLabel = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        toCityLabel = new javax.swing.JLabel();
        capacity = new javax.swing.JTextField();
        capacityLabel = new javax.swing.JLabel();
        flightDate = new com.toedter.calendar.JDateChooser();
        flightdateLabel = new javax.swing.JLabel();
        flightClassLabel = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        flightTime = new javax.swing.JTextField();
        flightTimeLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Description = new javax.swing.JTextArea();
        descriptionLabel = new javax.swing.JLabel();
        buttonReset = new javax.swing.JButton();
        buttonSave = new javax.swing.JButton();
        flightCodeError = new javax.swing.JLabel();
        radioA = new javax.swing.JRadioButton();
        radioB = new javax.swing.JRadioButton();
        flightCode = new javax.swing.JTextField();
        radioC = new javax.swing.JRadioButton();
        flightCodeLabel = new javax.swing.JLabel();
        radioD = new javax.swing.JRadioButton();
        comboFromCity = new javax.swing.JComboBox<>();
        comboToCity = new javax.swing.JComboBox<>();
        contentPanelHeading = new javax.swing.JLabel();
        priceError = new javax.swing.JLabel();
        capacityError = new javax.swing.JLabel();
        flightNameError = new javax.swing.JLabel();
        editFlightNavigationLabel = new javax.swing.JLabel();
        pictureLabel = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        newFileMenuitem = new javax.swing.JMenuItem();
        existingFileMenuitem = new javax.swing.JMenuItem();
        exitMenuitem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        aboutMenuitem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBounds(new java.awt.Rectangle(100, 50, 1100, 700));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        blackPanel.setBackground(new java.awt.Color(0, 0, 0));
        blackPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        airlinesISHeadingLabel.setFont(new java.awt.Font("Times New Roman", 1, 35)); // NOI18N
        airlinesISHeadingLabel.setForeground(new java.awt.Color(255, 215, 0));
        airlinesISHeadingLabel.setText("Airlines Information System");
        airlinesISHeadingLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                airlinesISHeadingLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                airlinesISHeadingLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                airlinesISHeadingLabelMouseExited(evt);
            }
        });
        blackPanel.add(airlinesISHeadingLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        addFlightNavigationLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        addFlightNavigationLabel.setForeground(new java.awt.Color(255, 255, 255));
        addFlightNavigationLabel.setText("<html> <u> Add Flight </u> <html>");
        addFlightNavigationLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addFlightNavigationLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addFlightNavigationLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addFlightNavigationLabelMouseExited(evt);
            }
        });
        blackPanel.add(addFlightNavigationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 50, -1, -1));

        addStaffNavigationLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        addStaffNavigationLabel.setForeground(new java.awt.Color(255, 255, 255));
        addStaffNavigationLabel.setText("<html> <u> Add Staff </u> <html>");
        addStaffNavigationLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addStaffNavigationLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addStaffNavigationLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addStaffNavigationLabelMouseExited(evt);
            }
        });
        blackPanel.add(addStaffNavigationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 50, -1, -1));

        logOutNavigationLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        logOutNavigationLabel.setForeground(new java.awt.Color(255, 255, 255));
        logOutNavigationLabel.setText("<html> <u> LogOut </u> <html>");
        logOutNavigationLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logOutNavigationLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logOutNavigationLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logOutNavigationLabelMouseExited(evt);
            }
        });
        blackPanel.add(logOutNavigationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 50, -1, -1));

        addFlightContentPanel.setBackground(new java.awt.Color(204, 255, 204));
        addFlightContentPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 0), 6, true));
        addFlightContentPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        flightName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                flightNameKeyTyped(evt);
            }
        });
        addFlightContentPanel.add(flightName, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 210, 40));

        flightNameLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        flightNameLabel.setText("Flight name");
        flightNameLabel.setToolTipText("");
        addFlightContentPanel.add(flightNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        fromCityLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        fromCityLabel.setText("From City");
        addFlightContentPanel.add(fromCityLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, -1));

        price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                priceKeyTyped(evt);
            }
        });
        addFlightContentPanel.add(price, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 280, 210, 40));

        toCityLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        toCityLabel.setText("To City");
        addFlightContentPanel.add(toCityLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, -1, -1));

        capacity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                capacityKeyTyped(evt);
            }
        });
        addFlightContentPanel.add(capacity, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 180, 210, 40));

        capacityLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        capacityLabel.setText("Capacity");
        addFlightContentPanel.add(capacityLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 190, -1, -1));

        flightDate.setDateFormatString("dd/MM/yyyy");
        addFlightContentPanel.add(flightDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 100, 160, 40));

        flightdateLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        flightdateLabel.setText("Flight date");
        addFlightContentPanel.add(flightdateLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 110, -1, -1));

        flightClassLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        flightClassLabel.setText("Flight class");
        addFlightContentPanel.add(flightClassLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 240, -1, -1));

        priceLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        priceLabel.setText("Price");
        addFlightContentPanel.add(priceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 290, 40, -1));
        addFlightContentPanel.add(flightTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 240, 210, 40));

        flightTimeLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        flightTimeLabel.setText("Flight Time");
        addFlightContentPanel.add(flightTimeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, -1, -1));

        Description.setColumns(20);
        Description.setRows(5);
        jScrollPane2.setViewportView(Description);

        addFlightContentPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 290, 260, 100));

        descriptionLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        descriptionLabel.setText("Description");
        addFlightContentPanel.add(descriptionLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, 80, -1));

        buttonReset.setBackground(new java.awt.Color(204, 255, 204));
        buttonReset.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        buttonReset.setText("Reset");
        buttonReset.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 255, 0), 4, true));
        buttonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonResetActionPerformed(evt);
            }
        });
        addFlightContentPanel.add(buttonReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 340, 110, 50));

        buttonSave.setBackground(new java.awt.Color(204, 255, 204));
        buttonSave.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        buttonSave.setText("Save");
        buttonSave.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 255, 0), 4, true));
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });
        addFlightContentPanel.add(buttonSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 340, 110, 50));

        flightCodeError.setBackground(new java.awt.Color(255, 255, 255));
        flightCodeError.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        flightCodeError.setForeground(new java.awt.Color(255, 51, 51));
        addFlightContentPanel.add(flightCodeError, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 30, 100, 20));

        flightClass_ButtonGroup.add(radioA);
        radioA.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        radioA.setText("A");
        radioA.setOpaque(false);
        addFlightContentPanel.add(radioA, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 230, 40, 40));

        flightClass_ButtonGroup.add(radioB);
        radioB.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        radioB.setText("B");
        radioB.setOpaque(false);
        addFlightContentPanel.add(radioB, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 230, 40, 40));

        flightCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                flightCodeKeyTyped(evt);
            }
        });
        addFlightContentPanel.add(flightCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 50, 160, 40));

        flightClass_ButtonGroup.add(radioC);
        radioC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        radioC.setText("C");
        radioC.setOpaque(false);
        addFlightContentPanel.add(radioC, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 230, 40, 40));

        flightCodeLabel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        flightCodeLabel.setText("Flight Code");
        addFlightContentPanel.add(flightCodeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 60, 80, 30));

        flightClass_ButtonGroup.add(radioD);
        radioD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        radioD.setText("D");
        radioD.setOpaque(false);
        addFlightContentPanel.add(radioD, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 230, 40, 40));

        comboFromCity.setModel(new javax.swing.DefaultComboBoxModel<>(cities));
        addFlightContentPanel.add(comboFromCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, 210, 40));

        comboToCity.setModel(new javax.swing.DefaultComboBoxModel<>(cities));
        addFlightContentPanel.add(comboToCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, 210, 40));

        contentPanelHeading.setFont(new java.awt.Font("Arial Black", 3, 48)); // NOI18N
        contentPanelHeading.setText("<html><u>Add Flight</u></html>");
        addFlightContentPanel.add(contentPanelHeading, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 0, 330, 60));

        priceError.setBackground(new java.awt.Color(255, 255, 255));
        priceError.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        priceError.setForeground(new java.awt.Color(255, 51, 51));
        addFlightContentPanel.add(priceError, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 260, 100, 20));

        capacityError.setBackground(new java.awt.Color(255, 255, 255));
        capacityError.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        capacityError.setForeground(new java.awt.Color(255, 51, 51));
        addFlightContentPanel.add(capacityError, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 160, 100, 20));

        flightNameError.setBackground(new java.awt.Color(255, 255, 255));
        flightNameError.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        flightNameError.setForeground(new java.awt.Color(255, 51, 51));
        addFlightContentPanel.add(flightNameError, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 110, 20));

        blackPanel.add(addFlightContentPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, 850, 410));

        editFlightNavigationLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        editFlightNavigationLabel.setForeground(new java.awt.Color(255, 255, 255));
        editFlightNavigationLabel.setText("<html>\n<u>\nEdit Flight\n</u>\n<html>");
        editFlightNavigationLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editFlightNavigationLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                editFlightNavigationLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                editFlightNavigationLabelMouseExited(evt);
            }
        });
        blackPanel.add(editFlightNavigationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 50, -1, -1));

        pictureLabel.setBackground(new java.awt.Color(255, 102, 0));
        pictureLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/baHpXzf-high-resolution-aircraft-wallpapers.jpg"))); // NOI18N
        blackPanel.add(pictureLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 1100, 550));

        getContentPane().add(blackPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 700));

        fileMenu.setText("File");

        newFileMenuitem.setText("Open New File");
        newFileMenuitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFileMenuitemActionPerformed(evt);
            }
        });
        fileMenu.add(newFileMenuitem);

        existingFileMenuitem.setText("Open Saved File");
        existingFileMenuitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                existingFileMenuitemActionPerformed(evt);
            }
        });
        fileMenu.add(existingFileMenuitem);

        exitMenuitem.setText("Exit");
        exitMenuitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuitemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuitem);

        menuBar.add(fileMenu);

        helpMenu.setText("Help");

        aboutMenuitem.setText("About");
        aboutMenuitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuitemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuitem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void logOutNavigationLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutNavigationLabelMouseExited
        logOutNavigationLabel.setFont(new Font("Times New Roman", Font.BOLD, 18));
    }//GEN-LAST:event_logOutNavigationLabelMouseExited

    private void logOutNavigationLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutNavigationLabelMouseEntered
        logOutNavigationLabel.setFont(new Font("Times New Roman", Font.BOLD, 20));
    }//GEN-LAST:event_logOutNavigationLabelMouseEntered

    private void logOutNavigationLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutNavigationLabelMouseClicked
        int option = JOptionPane.showConfirmDialog(null, "Do you want to LogOut?", "You Will Be Taken To HomePage", JOptionPane.YES_NO_OPTION);
        
        if(option == JOptionPane.YES_OPTION)
        {
            try {
                dispose();
                HomePage var = new HomePage();
                var.setVisible(true);
            }
            catch (IOException ex) {
                Logger.getLogger(AddStaff.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_logOutNavigationLabelMouseClicked

    private void addStaffNavigationLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addStaffNavigationLabelMouseExited
        addStaffNavigationLabel.setFont(new Font("Times New Roman", Font.BOLD, 18));
    }//GEN-LAST:event_addStaffNavigationLabelMouseExited

    private void addStaffNavigationLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addStaffNavigationLabelMouseEntered
        addStaffNavigationLabel.setFont(new Font("Times New Roman", Font.BOLD, 20));
    }//GEN-LAST:event_addStaffNavigationLabelMouseEntered

    private void addStaffNavigationLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addStaffNavigationLabelMouseClicked

        dispose();
        AddStaff var = new AddStaff();
        var.setVisible(true);
        
    }//GEN-LAST:event_addStaffNavigationLabelMouseClicked

    private void addFlightNavigationLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addFlightNavigationLabelMouseExited
        addFlightNavigationLabel.setFont(new Font("Times New Roman", Font.BOLD, 18));
    }//GEN-LAST:event_addFlightNavigationLabelMouseExited

    private void addFlightNavigationLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addFlightNavigationLabelMouseEntered
        addFlightNavigationLabel.setFont(new Font("Times New Roman", Font.BOLD, 20));
    }//GEN-LAST:event_addFlightNavigationLabelMouseEntered

    private void addFlightNavigationLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addFlightNavigationLabelMouseClicked
        dispose();

        AddingFlight var = new AddingFlight();
        var.setVisible(true);
    }//GEN-LAST:event_addFlightNavigationLabelMouseClicked

    private void airlinesISHeadingLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_airlinesISHeadingLabelMouseExited
        airlinesISHeadingLabel.setFont(new Font("Times New Roman", Font.BOLD, 35));
    }//GEN-LAST:event_airlinesISHeadingLabelMouseExited

    private void airlinesISHeadingLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_airlinesISHeadingLabelMouseEntered
        airlinesISHeadingLabel.setFont(new Font("Times New Roman", Font.BOLD, 38));
    }//GEN-LAST:event_airlinesISHeadingLabelMouseEntered

    private void airlinesISHeadingLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_airlinesISHeadingLabelMouseClicked
        int option = JOptionPane.showConfirmDialog(null, "Are you sure? You will be taken to homepage.", "WARNING!", JOptionPane.YES_NO_OPTION);
       
        if(option == JOptionPane.YES_OPTION){
            try {
                dispose();
                HomePage var = new HomePage();
                var.setVisible(true);
            }
            catch (IOException ex) {
                Logger.getLogger(HomePage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_airlinesISHeadingLabelMouseClicked

    private void editFlightNavigationLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editFlightNavigationLabelMouseClicked
        dispose();
        EditFlight var = new EditFlight();
        var.setVisible(true);
    }//GEN-LAST:event_editFlightNavigationLabelMouseClicked

    private void editFlightNavigationLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editFlightNavigationLabelMouseEntered
        editFlightNavigationLabel.setFont(new Font("Times New Roman", Font.BOLD, 20));
    }//GEN-LAST:event_editFlightNavigationLabelMouseEntered

    private void editFlightNavigationLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editFlightNavigationLabelMouseExited
        editFlightNavigationLabel.setFont(new Font("Times New Roman", Font.BOLD, 18));
    }//GEN-LAST:event_editFlightNavigationLabelMouseExited

    private void buttonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonResetActionPerformed
        flightCode.setText("");
        flightName.setText("");
        flightDate.setCalendar(null);
        flightTime.setText("");
        capacity.setText("");
        flightClass_ButtonGroup.clearSelection();
        price.setText("");
        Description.setText("");
    }//GEN-LAST:event_buttonResetActionPerformed

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        String date = flightDate.getDateFormatString().toString();
        this.codeVariable = flightCode.getText();
        this.nameVariable = flightName.getText();
        this.fromCityVariable = (String) comboFromCity.getSelectedItem();
        this.toCityVariable = (String) comboToCity.getSelectedItem();
        this.dateVariable = ((JTextField)flightDate.getDateEditor().getUiComponent()).getText();
        this.timeVariable = flightTime.getText();
        this.capacityVariable = capacity.getText();
        this.priceVariable = price.getText();
        this.descriptionVariable = Description.getText();
        try{
            this.classVariable = flightClass_ButtonGroup.getSelection().getActionCommand();
        }
        catch(Exception e)
        {

        }
        
        //checking if any of the input fields are empty or not
        if(codeVariable=="" || nameVariable=="" || dateVariable.isBlank() || timeVariable=="" || flightClass_ButtonGroup.getSelection()==null || capacityVariable == "" || priceVariable=="" || descriptionVariable=="") {
            JOptionPane.showMessageDialog(this, "Do not leave any field empty.");
        }
        else{
            try {
                //Writing the added flight details in csv file
                String file = ".\\flightInfo.csv";
                CSVWriter writer = new CSVWriter(new FileWriter(file,true));
                ArrayList<String[]> record = new ArrayList<String[]>();

                record.add(new String[] {codeVariable, nameVariable, fromCityVariable, toCityVariable, dateVariable, timeVariable, 
                                        capacityVariable, classVariable, priceVariable, descriptionVariable});

                writer.writeAll(record);

                writer.close();
                JOptionPane.showMessageDialog(this, "Flight has been successfully added.");
            }
            catch (IOException ex) {
                Logger.getLogger(AddingFlight.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_buttonSaveActionPerformed

    //This method on lets user to type number in the flightCode textfield
    private void flightCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_flightCodeKeyTyped
        char var = evt.getKeyChar();
        
        if (!Character.isDigit(var) && !(var==java.awt.event.KeyEvent.VK_BACK_SPACE) && !(var==java.awt.event.KeyEvent.VK_DELETE)) {
            evt.consume();
            flightCode.setEditable(false);
            flightCodeError.setText("NUMBER ONLY");
        } 
        else {
            flightCode.setEditable(true);
            flightCodeError.setText("");
        }
    }//GEN-LAST:event_flightCodeKeyTyped

    //This method on lets user to type number in the capacity textfield
    private void capacityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_capacityKeyTyped
        char var = evt.getKeyChar();
        
        if (!Character.isDigit(var) && !(var==java.awt.event.KeyEvent.VK_BACK_SPACE) && !(var==java.awt.event.KeyEvent.VK_DELETE)) {
            evt.consume();
            capacity.setEditable(false);
            capacityError.setText("NUMBER ONLY");
        } 
        else {
            capacity.setEditable(true);
            capacityError.setText("");
        }
    }//GEN-LAST:event_capacityKeyTyped

    //This method on lets user to type number in the price textfield
    private void priceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceKeyTyped
        char var = evt.getKeyChar();
        
        if (!Character.isDigit(var) && !(var==java.awt.event.KeyEvent.VK_BACK_SPACE) && !(var==java.awt.event.KeyEvent.VK_DELETE)) {
            evt.consume();
            price.setEditable(false);
            priceError.setText("NUMBER ONLY");
        } 
        else {
            price.setEditable(true);
            priceError.setText("");
        }
    }//GEN-LAST:event_priceKeyTyped

    //This method on lets user to type alphabet in the flightName textfield
    private void flightNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_flightNameKeyTyped
        char var = evt.getKeyChar();
        if (!Character.isAlphabetic(var) && !(var==java.awt.event.KeyEvent.VK_BACK_SPACE) && !(var==java.awt.event.KeyEvent.VK_DELETE)) {
            evt.consume();
            flightName.setEditable(false);
            flightNameError.setText("ALPHABET ONLY");
        } 
        else {
            flightName.setEditable(true);
            flightNameError.setText("");
        }
    }//GEN-LAST:event_flightNameKeyTyped

    //This methods opens a new JFrame file of the system.
    private void newFileMenuitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFileMenuitemActionPerformed
        try {
            HomePage var = new HomePage();
            var.setVisible(true);
            var.setDefaultCloseOperation(this.DISPOSE_ON_CLOSE);
        } 
        catch (IOException ex) {
            Logger.getLogger(Search.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_newFileMenuitemActionPerformed

    //This method reads the existing csv file and appends the data into JTable
    private void existingFileMenuitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_existingFileMenuitemActionPerformed
        try {
            //opening the editFlight page for showing the appended data in jTable
            EditFlight var= new EditFlight();
            var.setVisible(true);
            
            BufferedReader file = new BufferedReader(new FileReader(new File(".\\dataWhileOpenExistingFile.csv")));
            ArrayList<String[]> records = new ArrayList<String[]>();
            
            String line = null;
            int row = 0;
            
            while ((line = file.readLine()) != null) {
                //If condition for avoiding the firt row i.e., header of the csv file
                if (row == 0) {
                    row++;
                    continue;
                }
                String[] splitted = line.split(",");
                records.add(splitted);
            }
            file.close();

            //Outer for each loop to iterate over the array list
            for(String[] data: records)
            {
                var.tab.addRow(new Object[]{});
                int col = 0;
                
                //Inner for each loop to iterate the over the data of array list.
                for(String subData: data)
                {
                    var.editFlightTable.setValueAt(subData, var.tab.getRowCount()-1, col);
                    col++;
                }
            }
        }
        catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_existingFileMenuitemActionPerformed

    //This method exits the system
    private void exitMenuitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuitemActionPerformed
        int option = JOptionPane.showConfirmDialog(null, "Are you sure you want to exit?", "Confirm", JOptionPane.YES_NO_OPTION);
        
        if (option == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_exitMenuitemActionPerformed

    //This method opens the about page in pdf format in google via a link.
    private void aboutMenuitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuitemActionPerformed
        try{
            URI link = new URI("https://drive.google.com/file/d/1SiBFresB3Ftddgo9-YTJS3opDCFjYjU5/view?usp=sharing");
            Desktop var = Desktop.getDesktop();
            var.browse(link);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Sorry for trouble! We are having an issue. Please check back later");
        }
    }//GEN-LAST:event_aboutMenuitemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddingFlight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddingFlight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddingFlight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddingFlight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddingFlight().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Description;
    private javax.swing.JMenuItem aboutMenuitem;
    private javax.swing.JPanel addFlightContentPanel;
    private javax.swing.JLabel addFlightNavigationLabel;
    private javax.swing.JLabel addStaffNavigationLabel;
    private javax.swing.JLabel airlinesISHeadingLabel;
    private javax.swing.JPanel blackPanel;
    private javax.swing.JButton buttonReset;
    private javax.swing.JButton buttonSave;
    private javax.swing.JTextField capacity;
    private javax.swing.JLabel capacityError;
    private javax.swing.JLabel capacityLabel;
    private javax.swing.JComboBox<String> comboFromCity;
    private javax.swing.JComboBox<String> comboToCity;
    private javax.swing.JLabel contentPanelHeading;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JLabel editFlightNavigationLabel;
    private javax.swing.JMenuItem existingFileMenuitem;
    private javax.swing.JMenuItem exitMenuitem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel flightClassLabel;
    private javax.swing.ButtonGroup flightClass_ButtonGroup;
    private javax.swing.JTextField flightCode;
    private javax.swing.JLabel flightCodeError;
    private javax.swing.JLabel flightCodeLabel;
    private com.toedter.calendar.JDateChooser flightDate;
    private javax.swing.JTextField flightName;
    private javax.swing.JLabel flightNameError;
    private javax.swing.JLabel flightNameLabel;
    private javax.swing.JTextField flightTime;
    private javax.swing.JLabel flightTimeLabel;
    private javax.swing.JLabel flightdateLabel;
    private javax.swing.JLabel fromCityLabel;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel logOutNavigationLabel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem newFileMenuitem;
    private javax.swing.JLabel pictureLabel;
    private javax.swing.JTextField price;
    private javax.swing.JLabel priceError;
    protected javax.swing.JLabel priceLabel;
    private javax.swing.JRadioButton radioA;
    private javax.swing.JRadioButton radioB;
    private javax.swing.JRadioButton radioC;
    private javax.swing.JRadioButton radioD;
    private javax.swing.JLabel toCityLabel;
    // End of variables declaration//GEN-END:variables

}
