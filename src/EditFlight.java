
import airlines.information.system.ImportMethodClass;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.net.URI;
import java.awt.Desktop;
import java.awt.Font;
import java.io.IOException;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author [Shreesu Thapa, Avigya Aryal, Mubson Karki] - C13
 */


//This class is similiar to the Search class except the table are editable
public class EditFlight extends javax.swing.JFrame {
    DefaultTableModel tab;
    int initialIndex, finalIndex;
    
    //Creating a string list for adding them to the JComboBox.
    String[] cities = {"Select your destination","Atlanta","Bangkok","Beijing","Chicago","Dallas","Denver","Dubai","Istabnul","Kathmandu","Kolkata",
                        "London","Los Angeles","Moscow","Madrid","New York","Osaka","Paris","Seoul","Shanghai","Tokyo"};
    
    ImportMethodClass importVar = new ImportMethodClass();
    
    
    public EditFlight() {
        initComponents();
        searchDestinationComboBox.setVisible(false);
        searchDestinationButton.setVisible(false);
        searchClassButton.setVisible(false);
        searchClassComboBox.setVisible(false);
        
        try {
            //Importing the data from csv file to the JTable.
            BufferedReader br = new BufferedReader(new FileReader(new File(".\\flightInfo.csv")));
            ArrayList<String[]> elements = new ArrayList<String[]>();
            String line = null;
            int iteration = 0;
            while((line = br.readLine())!=null) {
                if(iteration == 0)
                {
                    iteration++;
                    continue;
                }
                String[] splitted = line.split(",");
                elements.add(splitted);
            }
            br.close();
            String[] columNames = new String[] {"Flight Code", "Flight Name", "From City", "To City","Flight Date", "Flight Time", "Capacity", "Flight Class", "Price", "Description"};

            Object[][] content = new Object[elements.size()][10];
            for(int i=0; i<elements.size(); i++) {
                content[i][0] = elements.get(i)[0];
                content[i][1] = elements.get(i)[1];
                content[i][2] = elements.get(i)[2];
                content[i][3] = elements.get(i)[3];
                content[i][4] = elements.get(i)[4];
                content[i][5] = elements.get(i)[5];
                content[i][6] = elements.get(i)[6];
                content[i][7] = elements.get(i)[7];
                content[i][8] = elements.get(i)[8];
                content[i][9] = elements.get(i)[9];
            }
            tab = new DefaultTableModel(content, columNames);
            editFlightTable.setModel(tab);

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editFlight_searchButtonGroup = new javax.swing.ButtonGroup();
        blackPanel = new javax.swing.JPanel();
        arilinesISHeadingLabel = new javax.swing.JLabel();
        editFlightContentPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        editFlightTable = new javax.swing.JTable();
        deleteButton = new javax.swing.JButton();
        searchDestination_radioButton = new javax.swing.JRadioButton();
        searchByPanel = new javax.swing.JPanel();
        searchDestinationComboBox = new javax.swing.JComboBox<>();
        searchClassComboBox = new javax.swing.JComboBox<>();
        searchDestinationButton = new javax.swing.JButton();
        searchClassButton = new javax.swing.JButton();
        searchClass_radioButton = new javax.swing.JRadioButton();
        searchPanel = new javax.swing.JPanel();
        searchButton = new javax.swing.JButton();
        searchField = new javax.swing.JTextField();
        contentHeadingLabel = new javax.swing.JLabel();
        pictureLabel = new javax.swing.JLabel();
        addFlihgtNavigationLabel = new javax.swing.JLabel();
        addStaffNavigationLabel = new javax.swing.JLabel();
        logOutNavigationLabel = new javax.swing.JLabel();
        editFlightNavigationLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        newFileMenuitem = new javax.swing.JMenuItem();
        existingFileMenuitem = new javax.swing.JMenuItem();
        exitMenuitem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        aboutMenuitem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        blackPanel.setBackground(new java.awt.Color(0, 0, 0));
        blackPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        arilinesISHeadingLabel.setFont(new java.awt.Font("Times New Roman", 1, 35)); // NOI18N
        arilinesISHeadingLabel.setForeground(new java.awt.Color(255, 215, 0));
        arilinesISHeadingLabel.setText("Airlines Information System");
        arilinesISHeadingLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                arilinesISHeadingLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                arilinesISHeadingLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                arilinesISHeadingLabelMouseExited(evt);
            }
        });
        blackPanel.add(arilinesISHeadingLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        editFlightContentPanel.setBackground(new java.awt.Color(204, 255, 204));
        editFlightContentPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 204, 0), 6, true));
        editFlightContentPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        editFlightTable.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        editFlightTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Flight Code", "Flight Name", "From City", "To City", "Flight Date", "Flight Time", "Capacity", "Flight Class", "Price", "Description"
            }
        ));
        editFlightTable.setRowHeight(30);
        editFlightTable.setRowMargin(5);
        editFlightTable.setSelectionBackground(new java.awt.Color(102, 204, 255));
        editFlightTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        editFlightTable.setShowGrid(false);
        editFlightTable.getTableHeader().setResizingAllowed(false);
        editFlightTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(editFlightTable);

        editFlightContentPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 900, 210));

        deleteButton.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        editFlightContentPanel.add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(823, 423, 100, 30));

        editFlight_searchButtonGroup.add(searchDestination_radioButton);
        searchDestination_radioButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        searchDestination_radioButton.setText("Search by Destination");
        searchDestination_radioButton.setOpaque(false);
        searchDestination_radioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchDestination_radioButtonActionPerformed(evt);
            }
        });
        editFlightContentPanel.add(searchDestination_radioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 100, 180, -1));

        searchByPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 0), 4, true), "Search Your Flight Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial Black", 3, 12))); // NOI18N
        searchByPanel.setOpaque(false);
        searchByPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchDestinationComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(cities));
        searchByPanel.add(searchDestinationComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 210, 40));

        searchClassComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Your Flight Class", "A", "B", "C", "D" }));
        searchByPanel.add(searchClassComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 210, 40));

        searchDestinationButton.setBackground(new java.awt.Color(204, 255, 204));
        searchDestinationButton.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        searchDestinationButton.setText("<html>Search<br> Destination</html>");
        searchDestinationButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 255, 51), 4, true));
        searchDestinationButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        searchDestinationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchDestinationButtonActionPerformed(evt);
            }
        });
        searchByPanel.add(searchDestinationButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 100, 60));

        searchClassButton.setBackground(new java.awt.Color(204, 255, 204));
        searchClassButton.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        searchClassButton.setText("<html>Search<br> Class</html>");
        searchClassButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 255, 51), 4, true));
        searchClassButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchClassButtonActionPerformed(evt);
            }
        });
        searchByPanel.add(searchClassButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 100, 60));

        editFlightContentPanel.add(searchByPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 90, 340, 90));

        editFlight_searchButtonGroup.add(searchClass_radioButton);
        searchClass_radioButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        searchClass_radioButton.setText("Search by Class");
        searchClass_radioButton.setOpaque(false);
        searchClass_radioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchClass_radioButtonActionPerformed(evt);
            }
        });
        editFlightContentPanel.add(searchClass_radioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 130, 170, -1));

        searchPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 0), 4, true), "Search By Price", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial Black", 3, 12))); // NOI18N
        searchPanel.setOpaque(false);
        searchPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchButton.setBackground(new java.awt.Color(204, 255, 204));
        searchButton.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        searchButton.setText("Search");
        searchButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 255, 51), 4, true));
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        searchPanel.add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, 90, 40));
        searchPanel.add(searchField, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 150, 40));

        editFlightContentPanel.add(searchPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 280, 80));

        contentHeadingLabel.setFont(new java.awt.Font("Arial Black", 2, 48)); // NOI18N
        contentHeadingLabel.setText("<html><u>Edit Flight</u></html>");
        editFlightContentPanel.add(contentHeadingLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 0, 290, -1));

        blackPanel.add(editFlightContentPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 940, 470));

        pictureLabel.setBackground(new java.awt.Color(255, 255, 255));
        pictureLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/baHpXzf-high-resolution-aircraft-wallpapers.jpg"))); // NOI18N
        pictureLabel.setOpaque(true);
        blackPanel.add(pictureLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 1100, 550));

        addFlihgtNavigationLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        addFlihgtNavigationLabel.setForeground(new java.awt.Color(255, 255, 255));
        addFlihgtNavigationLabel.setText("<html> <u> Add Flight </u> <html>");
        addFlihgtNavigationLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addFlihgtNavigationLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addFlihgtNavigationLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addFlihgtNavigationLabelMouseExited(evt);
            }
        });
        blackPanel.add(addFlihgtNavigationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 50, -1, -1));

        addStaffNavigationLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        addStaffNavigationLabel.setForeground(new java.awt.Color(255, 255, 255));
        addStaffNavigationLabel.setText("<html> <u> Add Staff </u> <html>");
        addStaffNavigationLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addStaffNavigationLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addStaffNavigationLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addStaffNavigationLabelMouseExited(evt);
            }
        });
        blackPanel.add(addStaffNavigationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 50, -1, -1));

        logOutNavigationLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        logOutNavigationLabel.setForeground(new java.awt.Color(255, 255, 255));
        logOutNavigationLabel.setText("<html> <u> LogOut </u> <html>");
        logOutNavigationLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logOutNavigationLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logOutNavigationLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logOutNavigationLabelMouseExited(evt);
            }
        });
        blackPanel.add(logOutNavigationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 50, -1, -1));

        editFlightNavigationLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        editFlightNavigationLabel.setForeground(new java.awt.Color(255, 255, 255));
        editFlightNavigationLabel.setText("<html>\n<u>\nEdit Flight\n</u>\n<html>");
        editFlightNavigationLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editFlightNavigationLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                editFlightNavigationLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                editFlightNavigationLabelMouseExited(evt);
            }
        });
        blackPanel.add(editFlightNavigationLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 50, -1, -1));

        getContentPane().add(blackPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 700));

        jMenu1.setText("File");

        newFileMenuitem.setText("Open New File");
        newFileMenuitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFileMenuitemActionPerformed(evt);
            }
        });
        jMenu1.add(newFileMenuitem);

        existingFileMenuitem.setText("Open Saved File");
        existingFileMenuitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                existingFileMenuitemActionPerformed(evt);
            }
        });
        jMenu1.add(existingFileMenuitem);

        exitMenuitem.setText("Exit");
        exitMenuitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuitemActionPerformed(evt);
            }
        });
        jMenu1.add(exitMenuitem);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        aboutMenuitem.setText("About");
        aboutMenuitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuitemActionPerformed(evt);
            }
        });
        jMenu2.add(aboutMenuitem);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void arilinesISHeadingLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_arilinesISHeadingLabelMouseClicked
        int option = JOptionPane.showConfirmDialog(null, "Are you sure? You will be taken to homepage.", "WARNING!", JOptionPane.YES_NO_OPTION);
       
        if(option == JOptionPane.YES_OPTION){
            try {
                dispose();
                HomePage var = new HomePage();
                var.setVisible(true);
            }
            catch (IOException ex) {
                Logger.getLogger(HomePage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_arilinesISHeadingLabelMouseClicked

    private void arilinesISHeadingLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_arilinesISHeadingLabelMouseEntered
        arilinesISHeadingLabel.setFont(new Font("Times New Roman", Font.BOLD, 38));
    }//GEN-LAST:event_arilinesISHeadingLabelMouseEntered

    private void arilinesISHeadingLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_arilinesISHeadingLabelMouseExited
        arilinesISHeadingLabel.setFont(new Font("Times New Roman", Font.BOLD, 35));
    }//GEN-LAST:event_arilinesISHeadingLabelMouseExited

    private void addFlihgtNavigationLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addFlihgtNavigationLabelMouseClicked
        dispose();

        AddingFlight af = new AddingFlight();
        af.setVisible(true);
    }//GEN-LAST:event_addFlihgtNavigationLabelMouseClicked

    private void addFlihgtNavigationLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addFlihgtNavigationLabelMouseEntered
        addFlihgtNavigationLabel.setFont(new Font("Times New Roman", Font.BOLD, 20));
    }//GEN-LAST:event_addFlihgtNavigationLabelMouseEntered

    private void addFlihgtNavigationLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addFlihgtNavigationLabelMouseExited
        addFlihgtNavigationLabel.setFont(new Font("Times New Roman", Font.BOLD, 18));
    }//GEN-LAST:event_addFlihgtNavigationLabelMouseExited

    private void addStaffNavigationLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addStaffNavigationLabelMouseClicked

        dispose();
        AddStaff aa = new AddStaff();
        aa.setVisible(true);
    }//GEN-LAST:event_addStaffNavigationLabelMouseClicked

    private void addStaffNavigationLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addStaffNavigationLabelMouseEntered
        addStaffNavigationLabel.setFont(new Font("Times New Roman", Font.BOLD, 20));
    }//GEN-LAST:event_addStaffNavigationLabelMouseEntered

    private void addStaffNavigationLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addStaffNavigationLabelMouseExited
        addStaffNavigationLabel.setFont(new Font("Times New Roman", Font.BOLD, 18));
    }//GEN-LAST:event_addStaffNavigationLabelMouseExited

    private void logOutNavigationLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutNavigationLabelMouseClicked
        int option = JOptionPane.showConfirmDialog(null, "Do you want to LogOut?", "You Will Be Taken To HomePage", JOptionPane.YES_NO_OPTION);
        if(option == JOptionPane.YES_OPTION)
        {
            try {
                dispose();
                HomePage a = new HomePage();
                a.setVisible(true);
            } catch (IOException ex) {
                Logger.getLogger(AddStaff.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_logOutNavigationLabelMouseClicked

    private void logOutNavigationLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutNavigationLabelMouseEntered
        logOutNavigationLabel.setFont(new Font("Times New Roman", Font.BOLD, 20));
    }//GEN-LAST:event_logOutNavigationLabelMouseEntered

    private void logOutNavigationLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutNavigationLabelMouseExited
        logOutNavigationLabel.setFont(new Font("Times New Roman", Font.BOLD, 18));
    }//GEN-LAST:event_logOutNavigationLabelMouseExited

    private void editFlightNavigationLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editFlightNavigationLabelMouseClicked
        dispose();
        EditFlight ef = new EditFlight();
        ef.setVisible(true);
    }//GEN-LAST:event_editFlightNavigationLabelMouseClicked

    private void editFlightNavigationLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editFlightNavigationLabelMouseEntered
        editFlightNavigationLabel.setFont(new Font("Times New Roman", Font.BOLD, 20));
    }//GEN-LAST:event_editFlightNavigationLabelMouseEntered

    private void editFlightNavigationLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editFlightNavigationLabelMouseExited
        editFlightNavigationLabel.setFont(new Font("Times New Roman", Font.BOLD, 18));
    }//GEN-LAST:event_editFlightNavigationLabelMouseExited

    //This method deletes the selected table row
    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        tab.removeRow(editFlightTable.getSelectedRow());
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void newFileMenuitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFileMenuitemActionPerformed
        try {
            HomePage var = new HomePage();
            var.setVisible(true);
        }
        catch (IOException ex) {
            Logger.getLogger(Search.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_newFileMenuitemActionPerformed

    private void existingFileMenuitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_existingFileMenuitemActionPerformed
        try {
            EditFlight var = new EditFlight();
            var.setVisible(true);

            BufferedReader file = new BufferedReader(new FileReader(new File(".\\dataWhileOpenExistingFile.csv")));

            ArrayList<String[]> record = new ArrayList<String[]>();
            String line = null;
            int row = 0;

            while ((line = file.readLine()) != null) {

                if (row == 0) {
                    row++;
                    continue;
                }
                String[] splitted = line.split(",");
                record.add(splitted);
            }
            file.close();

            for(String[] data: record)
            {
                tab.addRow(new Object[]{});
                int col = 0;

                for(String subData: data)
                {
                    editFlightTable.setValueAt(subData, tab.getRowCount()-1, col);
                    col++;
                }
            }
        }
        catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_existingFileMenuitemActionPerformed

    private void exitMenuitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuitemActionPerformed
        int option = JOptionPane.showConfirmDialog(null, "Are you sure you want to exit?", "Confirm", JOptionPane.YES_NO_OPTION);

        if (option == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_exitMenuitemActionPerformed

    private void aboutMenuitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuitemActionPerformed
        try{
            URI link = new URI("https://drive.google.com/file/d/1SiBFresB3Ftddgo9-YTJS3opDCFjYjU5/view?usp=sharing");
            Desktop var = Desktop.getDesktop();
            var.browse(link);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Sorry for trouble! We are having an issue. Please check back later");
        }
    }//GEN-LAST:event_aboutMenuitemActionPerformed

    //This method is for gui where on radio button selected, their respective components appear.
    private void searchDestination_radioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchDestination_radioButtonActionPerformed
        if(searchDestination_radioButton.isSelected())
        {
            searchClass_radioButton.setEnabled(true);
            searchClassComboBox.setVisible(false);
            searchClassButton.setVisible(false);

            searchDestination_radioButton.setEnabled(false);
            searchDestinationComboBox.setVisible(true);
            searchDestinationButton.setVisible(true);
        }
    }//GEN-LAST:event_searchDestination_radioButtonActionPerformed

    //This method searches the number of flight available according to user's input of flight class.
    private void searchClassButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchClassButtonActionPerformed
        if(searchClassComboBox.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Please select a class");
        }
        else {
            String userChoice = (String) searchClassComboBox.getSelectedItem();
            int count = 0;
            boolean b = false;

            ArrayList<String> record = new ArrayList<String>();

            int rowCount = editFlightTable.getRowCount();
            int rowIndex = 0;
            boolean isEmpty = false;

            do {
                String var = (String) editFlightTable.getValueAt(rowIndex, 0);

                if(var != null && var.length()!=0) {
                    rowIndex++;
                }
                else{
                    isEmpty = true;
                }
            }
            while(rowIndex<rowCount && !isEmpty);

            for(int i = 0; i < rowIndex; i++) {
                record.add((String) editFlightTable.getValueAt(i, 7));
            }

            for(int i = 0; i<record.size(); i++) {

                if(userChoice.equals(record.get(i))) {
                    count++;
                }
            }

            if(count>0) {
                JOptionPane.showMessageDialog(this, "The nummber of passenger travelling from "+userChoice+" is "+count);
            }
            else
            {
                JOptionPane.showMessageDialog(this, "No passengers were travelling from "+userChoice);
            }
        }
    }//GEN-LAST:event_searchClassButtonActionPerformed

    //This method is for gui where on radio button selected, their respective components appear.
    private void searchClass_radioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchClass_radioButtonActionPerformed
        if(searchClass_radioButton.isSelected())
        {
            searchClass_radioButton.setEnabled(false);
            searchClassComboBox.setVisible(true);
            searchClassButton.setVisible(true);

            searchDestination_radioButton.setEnabled(true);
            searchDestinationComboBox.setVisible(false);
            searchDestinationButton.setVisible(false);
        }
    }//GEN-LAST:event_searchClass_radioButtonActionPerformed

    //This method searches for the flight details according to user's input of price.
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        ArrayList<String> flightCode = new ArrayList();
        ArrayList<String> flightName = new ArrayList();
        ArrayList<String> fromCity = new ArrayList();
        ArrayList<String> toCity = new ArrayList();
        ArrayList<String> flightDate = new ArrayList();
        ArrayList<String> flightTime = new ArrayList();
        ArrayList<String> flightCapacity = new ArrayList();
        ArrayList<String> flightClass = new ArrayList();
        ArrayList<String> flightPrice = new ArrayList();
        ArrayList<String> flightDescription = new ArrayList();

        String userInput = searchField.getText();
        int rowCount = editFlightTable.getRowCount();

        int rowIndex = 0;
        boolean emptyRow = false;

        do {
            String data = (String) editFlightTable.getValueAt(rowIndex, 0);

            if (data != null && data.length() != 0) {
                rowIndex++;
            }
            else {
                emptyRow = true;
            }
        } while (rowIndex < rowCount && !emptyRow);

        //price[i][j]=jTable1.getValuAt(i,j);
        for (int i = 0; i < rowIndex; i++) {
            String code = (String) editFlightTable.getValueAt(i, 0);
            flightCode.add(code);
        }

        for (int i = 0; i < rowIndex; i++) {
            String name = (String) editFlightTable.getValueAt(i, 1);
            flightName.add(name);
        }

        for (int i = 0; i < rowIndex; i++) {
            String fromcity = (String) editFlightTable.getValueAt(i, 2);
            fromCity.add(fromcity);
        }

        for (int i = 0; i < rowIndex; i++) {
            String tocity = (String) editFlightTable.getValueAt(i, 3);
            toCity.add(tocity);
        }

        for (int i = 0; i < rowIndex; i++) {
            String date = (String) editFlightTable.getValueAt(i, 4);
            flightDate.add(date);
        }

        for (int i = 0; i < rowIndex; i++) {
            String time = (String) editFlightTable.getValueAt(i, 5);
            flightTime.add(time);
        }

        for (int i = 0; i < rowIndex; i++) {
            String capacity = (String) editFlightTable.getValueAt(i, 6);
            flightCapacity.add(capacity);
        }

        for (int i = 0; i < rowIndex; i++) {
            String flightclass = (String) editFlightTable.getValueAt(i, 7);
            flightClass.add(flightclass);
        }

        for (int i = 0; i < rowIndex; i++) {
            String price = (String) editFlightTable.getValueAt(i, 8);
            flightPrice.add(price);
        }

        for (int i = 0; i < rowIndex; i++) {
            String description = (String) editFlightTable.getValueAt(i, 9);
            flightDescription.add(description);
        }

        for (int i = 0; i < flightPrice.size(); i++) {

            if (flightPrice.get(i).equals(userInput)) {
                //System.out.println(i);
                initialIndex = i;
                importVar.selectionSort(flightPrice);
                //System.out.println(flightPrice+"balle");

                break;
            }
        }

        int low = 0;
        int high = flightPrice.size() - 1;
        int binaryResult = importVar.binarySearch(flightPrice, low, high, userInput);
        finalIndex = binaryResult;

        if(finalIndex != -1)
        {
            String fcode = flightCode.set(initialIndex, flightCode.get(finalIndex));
            String fname = flightName.set(initialIndex, flightName.get(finalIndex));
            String fromcity = fromCity.set(initialIndex, fromCity.get(finalIndex));
            String tocity = toCity.set(initialIndex, toCity.get(finalIndex));
            String date = flightDate.set(initialIndex, flightDate.get(finalIndex));
            String time = flightTime.set(initialIndex, flightTime.get(finalIndex));
            String capacity = flightCapacity.set(initialIndex, flightCapacity.get(finalIndex));
            String fclass = flightClass.set(initialIndex, flightClass.get(finalIndex));
            String price = flightPrice.set(initialIndex, flightPrice.get(finalIndex));
            String description = flightDescription.set(initialIndex, flightDescription.get(finalIndex));
            JOptionPane.showMessageDialog(this, "SEARCH FOUND FOR INPUT PRICE OF "+userInput+".\n Flight Code:\t"+fcode+"\n Flight Name:\t"+fname+"\n Destination:\t"+tocity+"\n Departure:\t"+date+" ("+time+")");
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Search Not Found");
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    //This method searches the number of flight available according to user's input of flight destination.
    private void searchDestinationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchDestinationButtonActionPerformed
        if(searchDestinationComboBox.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Please select a destination");
        }
        else {
            String userChoice = (String) searchDestinationComboBox.getSelectedItem();
            int count = 0;
            boolean b = false;

            ArrayList<String> record = new ArrayList<String>();

            int rowCount = editFlightTable.getRowCount();
            int rowIndex = 0;
            boolean isEmpty = false;

            do {
                String var = (String) editFlightTable.getValueAt(rowIndex, 0);

                if(var != null && var.length()!=0) {
                    rowIndex++;
                }
                else{
                    isEmpty = true;
                }
            }
            while(rowIndex<rowCount && !isEmpty);

            for(int i = 0; i < rowIndex; i++) {
                record.add((String) editFlightTable.getValueAt(i, 3));
            }

            for(int i = 0; i<record.size(); i++) {

                if(userChoice.equals(record.get(i))) {
                    count++;
                }
            }

            if(count>0) {
                JOptionPane.showMessageDialog(this, "The nummber of passenger travelling from "+userChoice+" is "+count);
            }
            else
            {
                JOptionPane.showMessageDialog(this, "No passengers were travelling from "+userChoice);
            }
        }
    
    }//GEN-LAST:event_searchDestinationButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditFlight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditFlight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditFlight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditFlight.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditFlight().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuitem;
    private javax.swing.JLabel addFlihgtNavigationLabel;
    private javax.swing.JLabel addStaffNavigationLabel;
    private javax.swing.JLabel arilinesISHeadingLabel;
    private javax.swing.JPanel blackPanel;
    private javax.swing.JLabel contentHeadingLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JPanel editFlightContentPanel;
    private javax.swing.JLabel editFlightNavigationLabel;
    public javax.swing.JTable editFlightTable;
    private javax.swing.ButtonGroup editFlight_searchButtonGroup;
    private javax.swing.JMenuItem existingFileMenuitem;
    private javax.swing.JMenuItem exitMenuitem;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel logOutNavigationLabel;
    private javax.swing.JMenuItem newFileMenuitem;
    private javax.swing.JLabel pictureLabel;
    private javax.swing.JButton searchButton;
    private javax.swing.JPanel searchByPanel;
    private javax.swing.JButton searchClassButton;
    private javax.swing.JComboBox<String> searchClassComboBox;
    private javax.swing.JRadioButton searchClass_radioButton;
    private javax.swing.JButton searchDestinationButton;
    private javax.swing.JComboBox<String> searchDestinationComboBox;
    private javax.swing.JRadioButton searchDestination_radioButton;
    private javax.swing.JTextField searchField;
    private javax.swing.JPanel searchPanel;
    // End of variables declaration//GEN-END:variables
}
